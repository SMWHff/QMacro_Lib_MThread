[General]
SyntaxVersion=2
BeginHotkey=121
BeginHotkeyMod=0
PauseHotkey=0
PauseHotkeyMod=0
StopHotkey=123
StopHotkeyMod=0
RunOnce=1
EnableWindow=
MacroID=3855396e-0592-4189-917c-cea670ad73f5
Description=【神梦_多线程】协程 - 带延迟的例子
Enable=0
AutoRun=0
[Repeat]
Type=0
Number=1
[SetupUI]
Type=2
QUI=
[Relative]
SetupOCXFile=
[Comment]

[Script]
'#================================================================
'#        【命令库】神梦_多线程例子
'#----------------------------------------------------------------
'#        【作者】：神梦无痕
'#        【ＱＱ】：1042207232
'#        【Ｑ群】：624655641
'#        【更新】：2021-09-27
'#----------------------------------------------------------------
'#  插件说明：解决多线程资源冲突问题
'#----------------------------------------------------------------
'#  神梦工具: http://pan.baidu.com/s/1dESHf8X
'#----------------------------------------------------------------
'#  特别声明：请勿用于非法用途！！（否则后果自负）
'#================================================================


/*===========【了解协程】===========
 *
 * 携程？那不是订机票的吗？
 *
 * 当然不是 ――!
 *
 * 协程，又称微线程，纤程，英文Coroutines，是一种比线程更加轻量级的存在。
 * 
 * 比 IO 阻塞时，协程比多线程效率更高
 *
 * 协程的概念很早就提出来了，但直到最近几年才在某些语言（如Lua）中得到广泛应用。
 *
 * 子程序，或者称为函数，在所有语言中都是层级调用，比如A调用B，B在执行过程中又调用了C，C执行完毕返回，B执行完毕返回，最后是A执行完毕。
 * 
 * 所以子程序调用是通过栈实现的，一个线程就是执行一个子程序。
 * 
 * 子程序调用总是一个入口，一次返回，调用顺序是明确的。而协程的调用和子程序不同。
 * 
 * 协程看上去也是子程序，但执行过程中，在子程序内部可中断，然后转而执行别的子程序，在适当的时候再返回来接着执行。
 * 
 * 注意，在一个子程序中中断，去执行其他子程序，不是函数调用，有点类似CPU的中断。
 *  
 */
 

' 初始化命令库
Call Lib.神梦_多线程._初始化()


' 添加多线程到协程内
Call Lib.神梦_多线程.协程_添加(BeginThread(子程序A))
Call Lib.神梦_多线程.协程_添加(BeginThread(子程序B))

' 将上面添加的多线程以协程方式启动
' 并等待所有线程运行完毕
t = Timer()
Call Lib.神梦_多线程.协程_启动()
TracePrint "耗时：" & (Timer() - t) & " 秒"

MsgBox "运行完毕！", 64 + 4096, "温馨提示！" 


Sub 子程序A()
	Call Lib.神梦_多线程.协程_线程开始()  '这句必须放到子线程开头
	'===================================================
	
	For i = 0 To 10
		TracePrint i   :Call Lib.神梦_多线程.协程_线程切换()
		Sleep  500     :Call Lib.神梦_多线程.协程_线程切换()
	Next
End Sub


Sub 子程序B()
	Call Lib.神梦_多线程.协程_线程开始()  '这句必须放到子线程开头
	'===================================================
	
	'Call Lib.神梦_多线程.协程_线程切换() 命令太长了
	'为了方便，我将其封装到了子程序里，命名为中括号 []
	
	
	For i = 0 To 10
		TracePrint i   :[]
		Sleep  500     :[]
	Next
End Sub


' Delay 也要改装一下，用 协程_线程等待() 命令替换掉
Sub Sleep(毫秒)
	Call Lib.神梦_多线程.协程_线程等待(毫秒)
End Sub


' 将协程_线程切换命令再次封装，简化一下
Sub []()
	Call Lib.神梦_多线程.协程_线程切换()
End Sub


//以下是只对【多线程停止时】产生的事件
Sub OnThreadExit()
	Call Lib.神梦_多线程.协程_线程结束() '这句必须放到线程停止事件里
End Sub
